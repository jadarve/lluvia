#version 450

#include <lluvia/core.glsl>
#include <lluvia/core/color.glsl>

layout(binding = 0, r32f) uniform image2D in_image;
layout(binding = 1) uniform usampler1D in_colormap;
layout(binding = 2, rgba8ui) uniform uimage2D out_rgba;

layout(push_constant) uniform const_0
{
    float min_value;
    float max_value;
    float alpha;
    float reverse;
}
params;

void main()
{

    const ivec2 coords  = LL_GLOBAL_COORDS_2D;
    const ivec2 imgSize = imageSize(in_image);

    if (coords.x > imgSize.x || coords.y > imgSize.y) {
        return;
    }

    const float imageValue      = imageLoad(in_image, coords).r;
    float       normalizedValue = clamp((imageValue - params.min_value) / (params.max_value - params.min_value), 0.0, 1.0);
    normalizedValue             = params.reverse == 1.0 ? 1.0 - normalizedValue : normalizedValue;

    const uvec4 rgba = uvec4(texture(in_colormap, normalizedValue).xyz, params.alpha * 255);

    imageStore(out_rgba, coords, rgba);
}
