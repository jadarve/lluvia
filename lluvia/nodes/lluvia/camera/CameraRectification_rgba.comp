#version 450

#include <lluvia/core.glsl>
#include <lluvia/core/camera.glsl>

layout(binding = 0) uniform usampler2D in_rgba;
layout(std140, binding = 1) uniform uniform_in_camera {
    Camera camera;
} in_camera;

layout(binding = 2, rgba8ui) uniform uimage2D out_rgba;

void main() {

    const ivec2 coords  = LL_GLOBAL_COORDS_2D;
    const ivec2 imgSize = imageSize(out_rgba);

    if (coords.x > imgSize.x || coords.y > imgSize.y) {
        return;
    }

    // TODO: select between standard and fisheye distortion with a push constant
    const vec2 pixCoords = camera_standardInterpolationCoordinates(in_camera.camera, coords);

    // texture interpolation and storage
    const uvec4 RGBA = texture(in_rgba, pixCoords.xy);
    imageStore(out_rgba, coords, RGBA);
}
