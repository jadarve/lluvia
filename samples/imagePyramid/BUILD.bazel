load("@rules_cc//cc:defs.bzl", "cc_library", "cc_binary")
load("@rules_vulkan//glsl:defs.bzl", "glsl_shader")

config_setting(
    name = "on_linux",
    constraint_values = [
        "@platforms//os:linux",
    ],
)

config_setting(
    name = "on_windows",
    constraint_values = [
        "@platforms//os:windows",
    ],
)

glsl_shader(
    name = "ImageDownsampleX_shader",
    shader = "glsl/imageDownsampleX.comp",
    deps = [
        "//lluvia/glsl/lib:lluvia_glsl_library"
    ],
    visibility = ["//visibility:public"]
)

glsl_shader(
    name = "ImageDownsampleY_shader",
    shader = "glsl/imageDownsampleY.comp",
    deps = [
        "//lluvia/glsl/lib:lluvia_glsl_library"
    ],
    visibility = ["//visibility:public"]
)

cc_library (
    name = "imagePyramid_cc_library",
    hdrs = [
        "include/ImagePyramid.h",
    ],
    srcs = [
        "src/ImagePyramid.cpp",
    ],
    copts = select({
        ":on_linux": [
            "--std=c++17",
            "-stdlib=libstdc++",
        ],
        ":on_windows": [
            "/std:c++17",
        ],
    }),
    linkopts = [
        "-lstdc++fs"
    ],
    deps = [
        "//lluvia/cpp/core:core_cc_library",
        "@stb//:stb_image_cc_library",
    ],
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
)

cc_binary (
    name = "imagePyramid",
    srcs = [
        "src/main.cpp"
    ],
    copts = select({
        ":on_linux": [
            "--std=c++17",
            "-stdlib=libstdc++",
        ],
        ":on_windows": [
            "/std:c++17",
        ],
    }),
    linkopts = [
        "-lstdc++fs"
    ],
    deps = [
        ":imagePyramid_cc_library",
    ],
    data = [
        ":ImageDownsampleX_shader",
        ":ImageDownsampleY_shader"
    ]
)
