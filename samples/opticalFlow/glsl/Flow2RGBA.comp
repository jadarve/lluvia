#version 450

#include <lluvia/core.glsl>
#include <lluvia/core/color.glsl>

layout(binding = 0, rg32f)    uniform image2D in_flow;
layout(binding = 1, rgba8ui)  uniform uimage2D out_rgba;

layout(push_constant) uniform const_0 {
    float maxflow;
} params;

void main() {

    const ivec2 coords  = LL_GLOBAL_COORDS_2D;
    const ivec2 imgSize = imageSize(in_flow);

    if (coords.x > imgSize.x || coords.y > imgSize.y) {
        return;
    }

    vec2 flow = imageLoad(in_flow, coords).xy;
    bool isInvalid = any(isinf(flow)) || any(isnan(flow));

    const float normClamped = clamp(length(flow) / params.maxflow, 0, 1);

    // * Saturation increases linearly with the norm
    // * Value increases logaritmically with the norm.
    // * For norm equal zero, the rgb value is black
    // * Invalid pixels are coloured white.
    const vec4 hsva = isInvalid ?
                        vec4(255, 255, 255, 0) :
                        vec4(3.14159 + atan(-flow.y, -flow.x),
                             normClamped,
                             0.3 * log(normClamped) + 1,
                             0);

    uvec4 rgba = normClamped < 1e-3 ?
                    uvec4(0, 0, 0, 0) :
                    color_hsva2rgba(hsva);

    imageStore(out_rgba, coords, rgba);
}
