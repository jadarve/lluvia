#version 450

#include <lluvia/core.glsl>

layout(binding = 0, r8ui) uniform uimage2D in_gray;
layout(binding = 1, r8ui) uniform uimage2D out_gray;

void main() {

    // this coordinates are relative to out_gray size
    const ivec2 coords  = LL_GLOBAL_COORDS_2D;
    const ivec2 imgSize = imageSize(out_gray);

    if (coords.x > imgSize.x || coords.y > imgSize.y) {
        return;
    }

    const bool leftBorder  = coords.x == 0;
    const bool rightBorder = coords.x == imgSize.x - 1;

    // image coordinates for in_gray (twice the width of out_gray)
    const ivec2 inputImgCoords = ivec2(2*coords.x, coords.y);

    const uint img_0 = imageLoad(in_gray, inputImgCoords).r;

    const uint img_m = leftBorder  ? img_0 : imageLoad(in_gray, inputImgCoords + ivec2(-1, 0)).r;
    const uint img_p = rightBorder ? img_0 : imageLoad(in_gray, inputImgCoords + ivec2(+1, 0)).r;    

    // this is equivalent to 0.5*img_0 + 0.25*(img_m + img_p)
    const uint filterValue = (img_0 >> 1) + ((img_m + img_p) >> 2);

    imageStore(out_gray, coords, uvec4(filterValue));
}
