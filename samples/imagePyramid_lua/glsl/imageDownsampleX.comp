#version 450

#include <lluvia/core.glsl>

layout(binding = 0, rgba8ui) uniform uimage2D inputImage;
layout(binding = 1, rgba8ui) uniform uimage2D outputImage;

void main() {

    // this coordinates are relative to outputImage size
    const ivec2 coords  = LL_GLOBAL_COORDS_2D;
    const ivec2 imgSize = imageSize(outputImage);

    if (coords.x > imgSize.x || coords.y > imgSize.y) {
        return;
    }

    const bool leftBorder  = coords.x == 0;
    const bool rightBorder = coords.x == imgSize.x - 1;

    // image coordinates for inputImage (twice the width of outputImage)
    const ivec2 inputImgCoords = ivec2(2*coords.x, coords.y);

    const uvec4 img_0 = imageLoad(inputImage, inputImgCoords);

    const uvec4 img_m = leftBorder  ? img_0 : imageLoad(inputImage, inputImgCoords + ivec2(-1, 0));
    const uvec4 img_p = rightBorder ? img_0 : imageLoad(inputImage, inputImgCoords + ivec2(+1, 0));    

    // this is equivalent to 0.5*img_0 + 0.25*(img_m + img_p)
    const uvec4 filterValue = (img_0 >> 1) + ((img_m + img_p) >> 2);

    imageStore(outputImage, coords, filterValue);
}
