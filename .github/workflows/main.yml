name: main

on: [push]

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-20.04
    steps:
    - name: Install Python dependencies
      run: |
        sudo apt install -y python3.8-dev
        pip3 install --no-cache-dir cython numpy pytest jinja2 markupsafe
    - name: Install Vulkan SDK
      run: |
        wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.176-focal.list https://packages.lunarg.com/vulkan/1.2.176/lunarg-vulkan-1.2.176-focal.list
        sudo apt update
        sudo apt install -y vulkan-sdk
    - uses: actions/checkout@v1
    - name: Build
      run: bazel build //...
    - name: Prepare Python Wheel
      working-directory: bazel-bin/lluvia/python
      run: |
        mv lluvia-0.0.1-py3-none-any.whl lluvia-0.0.1-py3-none-any-linux.whl
    - uses: actions/upload-artifact@v2
      working-directory: bazel-bin/lluvia/python
      with:
        name: python-wheel-linux
        path: lluvia-0.0.1-py3-none-any-linux.whl
  
  build-windows:
    name: Build Windows
    runs-on: windows-2019
    steps:
    - name: Install tools
      run: |
        choco install --no-progress wget
        choco install --no-progress python2
    - name: Install Python dependencies
      run: |
        python -m pip install jinja2
        pip3 install cython numpy pytest jinja2 markupsafe
    - name: Install Vulkan SDK
      # from https://github.com/actions/virtual-environments/issues/18#issuecomment-561944259
      run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.2.176.1/windows/VulkanSDK-1.2.176.1-Installer.exe" -OutFile VulkanSDK.exe
          $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
          $installer.WaitForExit();
    - uses: actions/checkout@v1
    - name: Build
      run: |
        $Env:VULKAN_SDK = "C:/VulkanSDK/1.2.176.1"
        $Env:Path += ";C:/Python27"
        $Env:Path += ";C:/VulkanSDK/1.2.176.1/Bin"
        bazel build //lluvia/...
    - name: Prepare Python Wheel
      working-directory: bazel-bin/lluvia/python
      run: |
        mv lluvia-0.0.1-py3-none-any.whl lluvia-0.0.1-py3-none-any-windows.whl
    - uses: actions/upload-artifact@v2
      name: Upload Python Wheel
      working-directory: bazel-bin/lluvia/python
      with:
        name: python-wheel-windows
        path: lluvia-0.0.1-py3-none-any-windows.whl
  
  upload-release:
    name: Upload release
    runs-on: ubuntu-20.04
    needs: [build-linux, build-windows]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        name: Download Python wheel Linux
        with:
          name: python-wheel-linux
          path: lluvia-0.0.1-py3-none-any-linux.whl
      - uses: actions/download-artifact@v2
        name: Download Python wheel Windows
        with:
          name: python-wheel-windows
          path: lluvia-0.0.1-py3-none-any-windows.whl
      - name: List files
        run: |
          ls -la

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Build
#         run: echo ${{ github.sha }} > Release.txt
#       - name: Test
#         run: cat Release.txt
#       - name: Release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             Release.txt
#             LICENSE
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}