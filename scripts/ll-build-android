#!/usr/bin/env python3

import argparse
import os
import shlex
import subprocess
import sys

def main():

    parser = argparse.ArgumentParser(description='Android build script')
    parser.add_argument('--type', type=str, choices=['debug', 'release'], default='debug', help='Build type.')
    parser.add_argument('out_folder', type=str, help='output folder path.')

    args = parser.parse_args()

    if not 'ANDROID_NDK' in os.environ.keys():
        print('ANDROID_NDK environment variable not found. Aborted', file=sys.stderr)
        exit(-1)

    basepath, _ = os.path.split(__file__)
    basepath = os.path.abspath(os.path.join(basepath, '..'))
    toolchainFilePath = os.path.join(os.environ['ANDROID_NDK'], 'build', 'cmake', 'android.toolchain.cmake')

    print('lluvia basepath        :', basepath)
    print('output folder          :', args.out_folder)
    print('build type             :', args.type)
    print('Android toolchain file :', toolchainFilePath)

    # create output folder if it does not exists
    args.out_folder = os.path.abspath(args.out_folder)
    if not os.path.isdir(args.out_folder):
        print('creating output folder')
        os.mkdir(args.out_folder)

    ABIS = ['x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a']

    for abi in ABIS:
        print('Building:', abi)

        buildPath = os.path.join(args.out_folder, args.type, abi)

        cmakeCmd = 'cmake -DCMAKE_SYSTEM_NAME=Android' +\
                ' -DCMAKE_TOOLCHAIN_FILE={0}'.format(toolchainFilePath) +\
                ' -DCMAKE_SYSTEM_VERSION=24' +\
                ' -DANDROID_PLATFORM=24' +\
                ' -DANDROID_ABI={0}'.format(abi) +\
                ' -S {0}'.format(basepath) +\
                ' -B {0}'.format(buildPath)

        makeCmd = 'make -j8 lluvia-core'

        cmakeProcess = subprocess.Popen(shlex.split(cmakeCmd), stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        cmakeProcess.wait()
        makeProcess = subprocess.Popen(shlex.split(makeCmd), cwd=buildPath, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        makeProcess.wait()


if __name__ == '__main__':
    main()